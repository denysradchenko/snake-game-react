{"version":3,"sources":["service/SnakeService.js","Field.js","GameBoard.js","GameOver.js","Game.js","GameFreeze.js","App.js","index.js"],"names":["SnakeService","colSize","rowSize","snake","result","genNmbr","rng","Math","floor","random","appleCol","appleRow","some","el","column","row","this","getNewApple","apple","direction","oldSnake","Object","toConsumableArray","newHead","objectSpread","newApple","head","newBody","slice","push","concat","arguments","length","undefined","Field","_ref","value","fieldClass","react_default","a","createElement","className","GameBoard","fields","_loop","i","_loop2","j","key","src_Field_0","find","gameBoard","map","GameOver","newGame","onClick","Game","interval","state","_this","getInitGame","refreshApple","_this$state","setState","snakeMovement","console","log","_this$state2","newState","getActualBoard","props","clearInterval","gameOver","document","addEventListener","handleKeyDown","setInterval","_this$state3","src_GameBoard_0","src_GameOver_0","Component","GameFreeze","App","e","keyCode","preventDefault","prevState","Fragment","src_Game_0","src_GameFreeze_0","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.4b54cdb0.chunk.js","sourcesContent":["export default class SnakeService {\r\n  getNewApple(colSize, rowSize, snake) {\r\n    let result = null;\r\n\r\n    const genNmbr = rng => Math.floor(Math.random() * rng);\r\n\r\n    const appleCol = genNmbr(colSize);\r\n    const appleRow = genNmbr(rowSize);\r\n    result = [appleCol, appleRow];\r\n    if (snake.some((el) => el.column === appleCol && el.row === appleRow)) {\r\n      result = this.getNewApple(colSize, rowSize, snake)\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getActualBoard(colSize, rowSize, apple, snake, direction) {\r\n    // directions: \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"\r\n\r\n    if (direction === \"ArrowUp\" && snake[0].row === 0) return 'gameover';\r\n    if (direction === \"ArrowDown\" && snake[0].row === rowSize - 1) return 'gameover';\r\n    if (direction === \"ArrowLeft\" && snake[0].column === 0) return 'gameover';\r\n    if (direction === \"ArrowRight\" && snake[0].column === colSize - 1) return 'gameover';\r\n\r\n    const oldSnake = [...snake];\r\n\r\n    const newHead = {\r\n      ...oldSnake[0]\r\n    };\r\n\r\n    let newApple = apple;\r\n\r\n    oldSnake[0].head = false;\r\n\r\n\r\n    if (direction === \"ArrowUp\") newHead.row -= 1;\r\n    if (direction === \"ArrowDown\") newHead.row += 1;\r\n    if (direction === \"ArrowLeft\") newHead.column -= 1;\r\n    if (direction === \"ArrowRight\") newHead.column += 1;\r\n\r\n\r\n    const newBody = [...oldSnake.slice(0, -1)];\r\n    if (newHead.column === apple[0] && newHead.row === apple[1]) {\r\n      newBody.push(oldSnake.slice(-1)[0]);\r\n      newApple = this.getNewApple(colSize, rowSize, [newHead, ...newBody]);\r\n    }\r\n\r\n    const newSnake = [newHead, ...newBody];\r\n\r\n    return {\r\n      colSize,\r\n      rowSize,\r\n      apple: newApple,\r\n      snake: newSnake\r\n    }\r\n  }\r\n\r\n  getInitGame(colSize = 15, rowSize = 15) {\r\n    return {\r\n      colSize,\r\n      rowSize,\r\n      apple: [9, 7],\r\n      snake: [{\r\n          column: 4,\r\n          row: 7,\r\n          head: true\r\n        },\r\n        {\r\n          column: 3,\r\n          row: 7\r\n        },\r\n        {\r\n          column: 2,\r\n          row: 7\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\n// snake [ {column: position, row: position}, ..., ... ]\r\n","import React from 'react';\r\nimport './Field.css';\r\n\r\nconst Field = ({ value }) => {\r\n  let fieldClass = \"Field\";\r\n  if (value === \"apple\") fieldClass += ' field-apple';\r\n  else if (value === \"snake\") fieldClass += ' field-snake';\r\n  else if (value === \"snakehead\") fieldClass += ' field-snakehead';\r\n\r\n  return (\r\n    <div className={fieldClass}></div>\r\n  );\r\n}\r\n\r\nexport default Field;\r\n","import React from 'react';\r\nimport Field from './Field';\r\nimport './GameBoard.css';\r\n\r\nconst GameBoard = ({ colSize, rowSize, snake, apple }) => {\r\n  const fields = [];\r\n\r\n  for (let i = 0; i < colSize; i++) {\r\n    fields[i] = [];\r\n    for (let j = 0; j < rowSize; j++) {\r\n      const key = `${i + j}`;\r\n      if (i === apple[0] && j === apple[1]) {\r\n        fields[i][j] = <Field value=\"apple\" key={key} />\r\n      } else if (snake.some((el) => el.column === i && el.row === j)) {\r\n        if (snake.find(el => el.column === i && el.row === j).head) {\r\n          fields[i][j] = <Field value=\"snakehead\" key={key} />\r\n        } else {\r\n          fields[i][j] = <Field value=\"snake\" key={key} />\r\n        }\r\n      } else {\r\n        fields[i][j] = <Field value=\"empty\" key={key} />\r\n      }\r\n    }\r\n  }\r\n\r\n  const gameBoard = fields.map((el, i) => {\r\n    const key = `col${i + 1}`;\r\n    return <div className=\"column\" key={key}>{el}</div>\r\n  })\r\n\r\n  return (\r\n    <div className=\"GameBoard\">\r\n      {gameBoard}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameBoard;\r\n","import React from 'react';\r\nimport './GameOver.css'\r\n\r\nconst GameOver = ({ newGame }) => {\r\n  return (\r\n    <div className=\"GameOver\">\r\n      <h4>Game Over</h4>\r\n      <button onClick={newGame}>New game</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOver;\r\n","import React, { Component } from 'react';\r\nimport SnakeService from './service/SnakeService';\r\nimport GameBoard from './GameBoard';\r\nimport './Game.css';\r\nimport GameOver from './GameOver'\r\n\r\nclass Game extends Component {\r\n  interval = null;\r\n\r\n  SnakeService = new SnakeService();\r\n\r\n  state = this.SnakeService.getInitGame();\r\n\r\n  refreshApple = () => {\r\n    const { colSize, rowSize, snake } = this.state;\r\n    const apple = this.SnakeService.getNewApple(colSize, rowSize, snake);\r\n    this.setState({ apple });\r\n  }\r\n\r\n  snakeMovement = () => {\r\n    console.log('Moves');\r\n    const { colSize, rowSize, snake, apple } = this.state;\r\n    const newState = this.SnakeService.getActualBoard(colSize, rowSize, apple, snake, this.props.direction);\r\n\r\n    if (newState === \"gameover\") {\r\n      clearInterval(this.interval);\r\n      this.setState({ gameOver: true })\r\n      return;\r\n    }\r\n\r\n    this.setState(newState)\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('component <Game /> did Mount');\r\n    document.addEventListener(\"keydown\", this.props.handleKeyDown);\r\n    this.interval = setInterval(this.snakeMovement, 150);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('component <Game /> did Unmount');\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    const { colSize, rowSize, snake, apple, gameOver } = this.state;\r\n    return (\r\n      <div className=\"Game\">\r\n        <GameBoard\r\n          colSize={colSize}\r\n          rowSize={rowSize}\r\n          snake={snake}\r\n          apple={apple}\r\n        />\r\n        {gameOver ? <GameOver newGame={this.props.newGame} /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from 'react';\r\nimport SnakeService from './service/SnakeService';\r\nimport GameBoard from './GameBoard';\r\nimport './GameFreeze.css';\r\n\r\nclass GameFreeze extends Component {\r\n\r\n  SnakeService = new SnakeService();\r\n\r\n  state = this.SnakeService.getInitGame();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.props.handleKeyDown);\r\n    console.log('component <GameFreeze /> did Mount');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('component <GameFreeze /> did Unmount');\r\n  }\r\n\r\n  render() {\r\n    const { colSize, rowSize, snake, apple } = this.state;\r\n    return (\r\n      <div className=\"GameFreeze\">\r\n        <GameBoard\r\n          colSize={colSize}\r\n          rowSize={rowSize}\r\n          snake={snake}\r\n          apple={apple}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameFreeze;\r\n","import React, { Component } from 'react';\nimport Game from './Game';\nimport GameFreeze from './GameFreeze';\n\nclass App extends Component {\n  state = {\n    direction: null\n  }\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 27) {\n      this.setState({ direction: null });\n      return;\n    }\n    if (e.keyCode < 37 || e.keyCode > 40) return;\n    e.preventDefault();\n    this.setState((prevState) => {\n      if (prevState.direction === \"ArrowUp\" && e.key === \"ArrowDown\") return;\n      if (prevState.direction === \"ArrowDown\" && e.key === \"ArrowUp\") return;\n      if (prevState.direction === \"ArrowLeft\" && e.key === \"ArrowRight\") return;\n      if (prevState.direction === \"ArrowRight\" && e.key === \"ArrowLeft\") return;\n      return ({ direction: e.key })\n    });\n  }\n\n  newGame = () => {\n    this.setState({\n      direction: null\n    });\n  }\n\n  render() {\n    const { direction } = this.state;\n    return (\n      <>\n        {direction !== null ?\n          <Game direction={direction} handleKeyDown={this.handleKeyDown} newGame={this.newGame} /> :\n          <GameFreeze handleKeyDown={this.handleKeyDown} />\n        }\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}